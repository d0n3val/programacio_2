----------------------------------------------------
mymodule.h   ---------------------------------------
----------------------------------------------------

#ifndef __j1MYMODULE_H__
    #define __j1MYMODULE_H__

#include "j1Module.h"

class j1MyModule : public j1Module
{
public:

	j1MyModule();

    // Destructor
    virtual ~j1MyModule();

    // Called before render is available
    bool Awake();

    // Called before the first frame
    bool Start();

    // Called each loop iteration
    bool PreUpdate();
	bool Update(float dt);
	bool PostUpdate();

    // Called before quitting
    bool CleanUp();

public:



};

#endif // __j1MYMODULE_H__

----------------------------------------------------
mymodule.cpp ---------------------------------------
----------------------------------------------------

#include "p2Defs.h"
#include "p2Log.h"
#include "j1App.h"
#include "j1MyModule.h"

j1MyModule::j1MyModule() : j1Module()
{
}

// Destructor
j1MyModule::~j1MyModule()
{
}

// Called before render is available
bool j1MyModule::Awake()
{
	LOG("awake j1MyModule");
	bool ret = true;

	return ret;
}

// Called before the first frame
bool j1MyModule::Start()
{
	LOG("start j1MyModule");
	bool ret = true;

	return ret;
}

// Called each loop iteration
bool j1MyModule::PreUpdate()
{
	return true;
}

bool j1MyModule::Update(float dt)
{
	return true;
}


bool j1MyModule::PostUpdate()
{
	return true;
}

// Called before quitting
bool j1MyModule::CleanUp()
{
	LOG("cleanup j1MyModule");
	
	return true;
}

